{"version":3,"sources":["webparts/peopleDirectory/components/IndexNavigation/IndexNavigation.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,6EAAmD;AAEnD,oCAAmC;AACnC,0DAAoE;AAGpE;IAAqC,mCAA0C;IAA/E;QAAA,qEAyCC;QAxCC;;WAEG;QACK,wBAAkB,GAAG,UAAC,IAAgB,EAAE,EAAkC;YAChF,KAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAChD,CAAC,CAAA;;IAmCH,CAAC;IAjCQ,+CAAqB,GAA5B,UAA6B,SAAgC,EAAE,SAAa,EAAE,WAAgB;QAC5F,gEAAgE;QAChE,gDAAgD;QAChD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,KAAK,SAAS,CAAC,aAAa,CAAC;IAC9D,CAAC;IAEM,gCAAM,GAAb;QACE,0CAA0C;QAC1C,IAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,UAAC,CAAS,EAAE,CAAS,IAAe,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5H,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC;YAClC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,CAAC;QACD,gDAAgD;QAChD,IAAM,OAAO,GAAkB,EAAE,CAAC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAA,oBAAC,iBAAS,IAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,GAAI,EAA1D,CAA0D,CAAC,CAAC;QAC3G,2DAA2D;QAE3D,gFAAgF;QAChF,YAAY;QACZ,2CAA2C;QAC3C,qCAAqC;QACrC,4CAA4C;QAC5C,iBAAiB;QAEjB,MAAM,CAAC,CACL,6BAAK,SAAS,EAAE,qCAAM,CAAC,eAAe;YACrC;gBAAK,oBAAC,eAAM,IAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAI,CAAM;YAC3H,oBAAC,aAAK,IAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,EAAE,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,IAC/E,OAAO,CACF,CAEJ,CACP,CAAC;IACJ,CAAC;IACH,sBAAC;AAAD,CAzCA,AAyCC,CAzCoC,KAAK,CAAC,SAAS,GAyCnD;AAzCY,0CAAe","file":"webparts/peopleDirectory/components/IndexNavigation/IndexNavigation.js","sourcesContent":["import * as React from 'react';\r\nimport styles from './IndexNavigation.module.scss';\r\nimport { IIndexNavigationProps } from '.';\r\nimport { Search } from '../Search';\r\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\r\nimport * as strings from 'PeopleDirectoryWebPartStrings';\r\n\r\nexport class IndexNavigation extends React.Component<IIndexNavigationProps, {}> {\r\n  /**\r\n   * Event handler for selecting a tab in the navigation\r\n   */\r\n  private _handleIndexSelect = (item?: PivotItem, ev?: React.MouseEvent<HTMLElement>): void => {\r\n    this.props.onIndexSelect(item.props.linkText);\r\n  }\r\n\r\n  public shouldComponentUpdate(nextProps: IIndexNavigationProps, nextState: {}, nextContext: any): boolean {\r\n    // Component should update only if the selected tab has changed.\r\n    // This check helps to avoid unnecessary renders\r\n    return this.props.selectedIndex !== nextProps.selectedIndex;\r\n  }\r\n\r\n  public render(): React.ReactElement<IIndexNavigationProps> {\r\n    // build the list of alphabet letters A..Z\r\n    const az = Array.apply(null, { length: 26 }).map((x: string, i: number): string => { return String.fromCharCode(65 + i); });\r\n    if (this.props.locale === \"sv-SE\") {\r\n      az.push('Å', 'Ä', 'Ö');\r\n    }\r\n    // for each letter, create a PivotItem component\r\n    const indexes: JSX.Element[] = az.map(index => <PivotItem linkText={index} itemKey={index} key={index} />);\r\n    // as the last tab in the navigation, add the Search option\r\n\r\n    // indexes.push(<PivotItem linkText={strings.SearchButtonText} itemKey='Search'>\r\n    //   <Search\r\n    //     searchQuery={this.props.searchQuery}\r\n    //     onSearch={this.props.onSearch}\r\n    //     onClear={this.props.onSearchClear} />\r\n    // </PivotItem>);\r\n\r\n    return (\r\n      <div className={styles.indexNavigation}>\r\n       <div><Search searchQuery={this.props.searchQuery} onSearch={this.props.onSearch} onClear={this.props.onSearchClear} /></div>\r\n        <Pivot onLinkClick={this._handleIndexSelect} selectedKey={this.props.selectedIndex}>\r\n          {indexes}\r\n        </Pivot>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}