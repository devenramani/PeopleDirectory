{"version":3,"sources":["webparts/peopleDirectory/components/PeopleList/PeopleList.tsx"],"names":[],"mappings":"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","file":"webparts/peopleDirectory/components/PeopleList/PeopleList.js","sourcesContent":["import * as React from 'react';\r\nimport { IPeopleListProps } from '.';\r\nimport {\r\n  Persona,\r\n  PersonaSize\r\n} from 'office-ui-fabric-react/lib/Persona';\r\nimport * as strings from 'PeopleDirectoryWebPartStrings';\r\nimport styles from './PeopleList.module.scss';\r\nimport { Callout, DirectionalHint } from 'office-ui-fabric-react/lib/Callout';\r\nimport { IPeopleListState } from './IPeopleListState';\r\nimport { PeopleCallout } from '../PeopleCallout';\r\n\r\nimport { HoverCard, IExpandingCardProps } from 'office-ui-fabric-react/lib/HoverCard';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { Panel, PanelType } from 'office-ui-fabric-react/lib/Panel';\r\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\nimport { VerticalDivider } from 'office-ui-fabric-react/lib/Divider';\r\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\n\r\nexport class PeopleList extends React.Component<IPeopleListProps, IPeopleListState> {\r\n  constructor(props: IPeopleListProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n     \r\n      showPanel: false,\r\n      panelData: \"\"\r\n    };\r\n  }\r\n\r\n  public render(): React.ReactElement<IPeopleListProps> {\r\n    return (\r\n      <div className={`ms-Grid ms-Grid-row`}>\r\n        {this.props.people.length === 0 &&\r\n          (this.props.selectedIndex !== 'Search' ||\r\n            (this.props.selectedIndex === 'Search' &&\r\n              this.props.hasSearchQuery)) &&\r\n          // Show the 'No people found' message if no people have been retrieved\r\n          // and the user either selected a letter in the navigation or issued\r\n          // a search query (but not when navigated to the Search tab without\r\n          // providing a query yet)\r\n          <div className='ms-textAlignCenter'>{strings.NoPeopleFoundLabel}</div>}\r\n\r\n        <Panel isOpen={this.state.showPanel} type={PanelType.medium} onDismiss={this._hidePanel}>\r\n            <Persona primaryText={this.state.panelData.name} secondaryText={this.state.panelData.email} tertiaryText={this.state.panelData.phone} imageUrl={this.state.panelData.photoUrl} imageAlt={this.state.panelData.name} size={PersonaSize.size100} /> \r\n        </Panel>\r\n\r\n        {this.props.people.length > 0 &&\r\n          // for each retrieved person, create a persona card with the retrieved\r\n          // information\r\n          //this.props.people.map(p => <Persona primaryText={p.name} secondaryText={p.email} tertiaryText={p.phone} imageUrl={p.photoUrl} imageAlt={p.name} size={PersonaSize.size72} />)\r\n\r\n          this.props.people.map((p, i) => {\r\n            const phone: string = p.phone && p.mobile ? `${p.phone}/${p.mobile}` : p.phone ? p.phone : p.mobile;\r\n            // const toggleClassName: string = this.state.toggleClass ? `ms-Icon--ChromeClose ${styles.isClose}` : \"ms-Icon--ContactInfo\";\r\n            if (!p.photoUrl) {\r\n              p.photoUrl = \"/_layouts/15/userphoto.aspx?size=L&accountname\";\r\n            }\r\n\r\n            const expandingCardProps: IExpandingCardProps = {\r\n              onRenderCompactCard: this._onRenderCompactCard,\r\n              onRenderExpandedCard: this._onRenderExpandedCard,\r\n              renderData: p\r\n            };\r\n\r\n            return (\r\n              <div className={`ms-Grid-col  ${styles.persona_card}`}>\r\n\r\n                <HoverCard expandingCardProps={expandingCardProps} instantOpenOnClick={true}>\r\n                  <div className={styles.card}>\r\n                    <img src={p.photoUrl} className={styles.profile_image} />\r\n                    <div className={styles.container}>\r\n                      <h4><b>{p.name}</b></h4>\r\n                    </div>\r\n                  </div>\r\n                </HoverCard>\r\n              </div>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _showPanel = (p): void => {\r\n    this.setState({ showPanel: true, panelData : p});\r\n  }\r\n\r\n  private _hidePanel = (): void => {\r\n    this.setState({ showPanel: false });\r\n  }\r\n\r\n  private _onRenderCompactCard = (p): JSX.Element => {\r\n    return (\r\n      <div className={styles.compactCard}>\r\n        <Persona primaryText={p.name} secondaryText={p.email} tertiaryText={p.phone} imageUrl={p.photoUrl} imageAlt={p.name} size={PersonaSize.size100} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _onRenderExpandedCard = (p): JSX.Element => {\r\n\r\n    return (\r\n      <div className={styles.expandedCard}>\r\n      \r\n        {p.department}\r\n        \r\n        {p.function}\r\n        \r\n        {p.skills}\r\n       \r\n        {p.projects}\r\n        \r\n        <Link onClick={ () => this._showPanel(p) }> Show more</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\..\\src"}