{"version":3,"sources":["webparts/peopleDirectory/PeopleDirectoryWebPart.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA+B;AAC/B,oCAAsC;AACtC,8DAAqD;AACrD,8DAIoC;AAGpC,kDAAuF;AAMvF;IAAoD,0CAAmD;IAAvG;;IAgCA,CAAC;IA/BQ,uCAAM,GAAb;QAAA,iBAkBC;QAjBC,IAAM,OAAO,GAA8C,KAAK,CAAC,aAAa,CAC5E,kBAAe,EACf;YACE,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW;YAChD,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;YACvC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK;YAC5B,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE;YAC1B,aAAa,EAAE,UAAC,QAAgB;gBAC9B,qDAAqD;gBACrD,oCAAoC;gBACpC,KAAI,CAAC,UAAU,CAAC,KAAK,GAAG,QAAQ,CAAC;YACnC,CAAC;SACF,CACF,CAAC;QAEF,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC5C,CAAC;IAED,sBAAc,+CAAW;aAAzB;YACE,MAAM,CAAC,yBAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9B,CAAC;;;OAAA;IACS,4CAAW,GAArB;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,oBAAoB,CAAC;IACnE,CAAC;IACS,6DAA4B,GAAtC;QACE,MAAM,CAAC;YACL,KAAK,EAAE,EAAE;SACV,CAAC;IACJ,CAAC;IACH,6BAAC;AAAD,CAhCA,AAgCC,CAhCmD,uCAAqB,GAgCxE","file":"webparts/peopleDirectory/PeopleDirectoryWebPart.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDom from 'react-dom';\r\nimport { Version } from '@microsoft/sp-core-library';\r\nimport {\r\n  BaseClientSideWebPart,\r\n  IPropertyPaneConfiguration,\r\n  PropertyPaneTextField\r\n} from '@microsoft/sp-webpart-base';\r\n\r\nimport * as strings from 'PeopleDirectoryWebPartStrings';\r\nimport { PeopleDirectory, IPeopleDirectoryProps } from './components/PeopleDirectory/';\r\n\r\nexport interface IPeopleDirectoryWebPartProps {\r\n  title: string;\r\n}\r\n\r\nexport default class PeopleDirectoryWebPart extends BaseClientSideWebPart<IPeopleDirectoryWebPartProps> {\r\n  public render(): void {\r\n    const element: React.ReactElement<IPeopleDirectoryProps> = React.createElement(\r\n      PeopleDirectory,\r\n      {\r\n        webUrl: this.context.pageContext.web.absoluteUrl,\r\n        spHttpClient: this.context.spHttpClient,\r\n        title: this.properties.title,\r\n        displayMode: this.displayMode,\r\n        locale: this.getLocaleId(),\r\n        onTitleUpdate: (newTitle: string) => {\r\n          // after updating the web part title in the component\r\n          // persist it in web part properties\r\n          this.properties.title = newTitle;\r\n        }\r\n      }\r\n    );\r\n\r\n    ReactDom.render(element, this.domElement);\r\n  }\r\n\r\n  protected get dataVersion(): Version {\r\n    return Version.parse('1.0');\r\n  }\r\n  protected getLocaleId() : string {\r\n    return this.context.pageContext.cultureInfo.currentUICultureName;\r\n  }\r\n  protected getPropertyPaneConfiguration(): IPropertyPaneConfiguration {\r\n    return {\r\n      pages: []\r\n    };\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\src"}